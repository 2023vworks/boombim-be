name: CD self-hosted

# 이벤트 트리거
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  # GitHub Actions탭에서 수동실행 가능하도록 설정
  workflow_dispatch:

# 동시성 설정: 같은 그룹의 배포가 여러개 실행되면 가장 마지막에 실행된 배포외에는 취소 시킨다.
concurrency:
  group: production
  cancel-in-progress: true
# 환경변수 설정
env:
  VERSION: ${{ github.sha }}

jobs:
  build: # TODO: ci로 변경예정
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      # github actions 작업 브랜치로 checkout
      - name: Checkout actions Repository
        uses: actions/checkout@v2
      # node 버전 설정
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # build 수행 => TODO 이후 테스트 까지 수행해야 의미가 있다.
      - name: Install Dependencies and Build App
        run: |
          npm ci
          npm run build

  # 배포 Job
  deploy:
    needs: build
    name: Deploy

    # self-hosted: 물리서버에 설치된 러너에서 작업 수행
    runs-on: [self-hosted]
    strategy:
      matrix:
        node-version: [18.x]
    timeout-minutes: 10 # 10분
    steps:
      # github actions 작업 브랜치로 checkout
      - name: Checkout actions Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies and Build App
        run: |
          npm ci
          npm run build

      # 백그라운드 실행만 설정, 데몬 실행 x
      - name: Setting ENV and Run app
        env:
          RUNNER_TRACKING_ID: ''
        run: |
          PRODUCTION_ENV=${{ secrets.PRODUCTION_ENV }}
          echo $PRODUCTION_ENV | base64 --decode > .env
          export $(grep -E "^[^#]+=" .env)
          nohup node dist/src/main.js >> app.log 2>&1 & echo $! > node_pid
          disown $(cat node_pid)
